name: Deploy Client Build

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Required to allow push to another branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main branch
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run build
      run: npm run build

    - name: Set up Git
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

    - name: Check if 'deploy' branch exists
      id: check_branch
      run: |
        if git ls-remote --heads origin deploy | grep deploy; then
          echo "branch_exists=true" >> $GITHUB_ENV
        else
          echo "branch_exists=false" >> $GITHUB_ENV
        fi

    - name: Create deploy branch if it doesn't exist
      if: env.branch_exists == 'false'
      run: |
        git checkout --orphan deploy
        git reset --hard
        git commit --allow-empty -m "Initialize deploy branch"
        git push origin deploy

    - name: Deploy build/client folder to deploy branch
      run: |
        # Create temporary deployment directory
        mkdir -p temp-deploy
        
        # Copy all files (visible and hidden) from build/client directory
        # Using "cp -r build/client/. temp-deploy/" instead of problematic "cp -r build/client/.* build/client/* temp-deploy/"
        if [ -d "build/client" ]; then
          cp -r build/client/. temp-deploy/
          echo "Contents of temp-deploy:"
          ls -la temp-deploy
          
          cd temp-deploy
          git init
          git checkout -b deploy
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          
          # Only commit if there are changes
          if git status --porcelain | grep .; then
            git commit -m "Deploy client build from main"
            git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git push --force origin deploy
            echo "Deployment successful!"
          else
            echo "No changes to deploy"
          fi
        else
          echo "Error: build/client directory does not exist"
          exit 1
        fi